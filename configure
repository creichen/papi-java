#! /bin/bash

# --------------------------------------------------------------------------------
echo "Checking for javac (set JAVAC to override)..."
if [[ ${JAVAC} != "" ]]; then
    echo "- user override: using ${JAVAC}"
else
    JAVAC='javac'
    echo "- using javac from PATH, version: ${VERSION}"
fi
VERSION=`${JAVAC} -version 2>&1` || { echo 'Error: "javac -version" failed' ; exit 1; }

# --------------------------------------------------------------------------------
echo "Checking for javah (set JAVAH to override, options are 'javah' and 'javac')..."
if [[ ${JAVAH} != "" ]]; then
    echo "- user override: using ${JAVAH}"
else
    if [[ ${VERSION} == "javac 1.8."* ]]; then
	JAVAH='javah'
    elif [[ ${VERSION} == "javac 1."* ]]; then
	echo "Version ${VERSION} is not supported, must be Java 8 or later"
	exit 1
    else
	JAVAH='javac'
    fi
    echo "- using ${JAVAH}"
fi

# --------------------------------------------------------------------------------
PAPI_HEADER_FILE=include/papiStdEventDefs.h
echo "Checking for path to PAPI's ${PAPI_HEADER_FILE} (set PAPI_PATH to override)..."
if [[ ${PAPI_PATH} != "" ]]; then
    echo "- user override: using ${PAPI_PATH}"
else
    OPTIONS="/ /usr .."
    for P in ${OPTIONS} ; do
	if [ -e ${P}/${PAPI_HEADER_FILE} ]; then
	    PAPI_PATH=${P}
	    break
	fi
    done
    if [[ ${PAPI_PATH} == "" ]]; then
	echo "Not found in: ${OPTIONS}"
	exit 1
    fi
    echo "- auto-detection: ${PAPI_PATH}"
fi

if [ ! -e ${PAPI_PATH}/${PAPI_HEADER_FILE} ]; then
    echo "Error: missing header file (missing PAPI 5/6 development headers or wrong PAPI_PATH?): ${PAPI_PATH}/${PAPI_HEADER_FILE}"
    exit 1
fi

# --------------------------------------------------------------------------------
PAPI_LIB_FILE=libpapi.so
echo "Checking for ${PAPI_LIB_FILE} relative to ${PAPI_PATH} (set PAPI_LIBRARY_PATH to override)..."
if [[ ${PAPI_LIBRARY_PATH} != "" ]]; then
    echo "- user override: using ${PAPI_LIBRARY_PATH}"
else
    B=${PAPI_PATH}
    ARCH=`uname -m`
    OPTIONS="${B}/lib ${B}/lib32 ${B}/lib64 ${B}/lib/${ARCH}-* ${B}/lib/*"
    for P in ${OPTIONS}; do
	if [ -e ${P}/${PAPI_LIB_FILE} ]; then
	    PAPI_LIBRARY_PATH=${P}
	    break
	fi
    done
    if [[ ${PAPI_LIBRARY_PATH} == "" ]]; then
	echo "Not found in: ${OPTIONS}"
	exit 1
    fi
    echo "- auto-detection: ${PAPI_LIBRARY_PATH}"
fi

if [ ! -e ${PAPI_LIBRARY_PATH}/${PAPI_LIB_FILE} ]; then
    echo "Error: missing library file (missing PAPI 5/6 libraries or wrong PAPI_LIBRARY_PATH?): ${PAPI_LIBRARY_PATH}/${PAPI_LIB_FILE}"
    exit 1
fi

# --------------------------------------------------------------------------------
JAVAH=`echo ${JAVAH} | sed 's/\//\\\\\//g'`
JAVAC=`echo ${JAVAC} | sed 's/\//\\\\\//g'`
PAPI_PATH=`echo ${PAPI_PATH} | sed 's/\//\\\\\//g'`
PAPI_LIBRARY_PATH=`echo ${PAPI_LIBRARY_PATH} | sed 's/\//\\\\\//g'`

cat Makefile.template \
    | sed s/%javah%/"${JAVAH}"/ \
    | sed s/%javac%/"${JAVAC}"/ \
    | sed s/%papi_path%/"${PAPI_PATH}"/ \
    | sed s/%papi_library_path%/"${PAPI_LIBRARY_PATH}"/ \
    | cat > Makefile
echo "Run 'make' to build"

